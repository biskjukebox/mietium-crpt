import javax.crypto.*;
import javax.crypto.spec.SecretKeySpec;
import java.math.BigInteger;
import java.net.*;
import java.io.*;
import java.security.*;

/**
 * Created by jp on 13-11-2015.
 */
public class Cliente
{
    static public void main(String[] args) throws Exception
    {

            Socket s = new Socket("localhost", 4567);
            ObjectOutputStream oos = new ObjectOutputStream(s.getOutputStream());
            ObjectInputStream ois = new ObjectInputStream(s.getInputStream());

            BigInteger g = new BigInteger("44157404837960328768872680677686802650999163226766694797650810379076416463147265401084491113667624054557335394761604876882446924929840681990106974314935015501571333024773172440352475358750668213444607353872754650805031912866692119819377041901642732455911509867728218394542745330014071040326856846990119719675");
            BigInteger p = new BigInteger("99494096650139337106186933977618513974146274831566768179581759037259788798151499814653951492724365471316253651463342255785311748602922458795201382445323499931625451272600173180136123245441204133515800495917242011863558721723303661523372572477211620144038809673692512025566673746993593384600667047373692203583");
            BigInteger x = new BigInteger(1024, new SecureRandom()); //gera um numero aleatorio
            BigInteger gx = g.modPow(x,p); //gera gx
            oos.writeObject(gx); //manda gx
            BigInteger gy = (BigInteger) ois.readObject(); //le o gy vindo de fora
            BigInteger gxy = gy.modPow(x,p); //gera gxy
            //funcao hash
            MessageDigest sha256 = MessageDigest.getInstance("SHA-256");
            byte[] rawbits = sha256.digest(gxy.toByteArray());
            //cifrar
            Cipher c = Cipher.getInstance("AES/CTR/NoPadding");
            SecretKey key = new SecretKeySpec(rawbits,0,16,"AES");
            c.init(Cipher.ENCRYPT_MODE, key);
            byte iv[] = c.getIV();
            oos.writeObject(iv);
            //mac
            Mac m = Mac.getInstance("HmacSHA1");
            m.init(new SecretKeySpec(rawbits,16,16,"HmacSHA1"));

        String test;
        BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));
        byte[] cipher_Text, mac;
        while((test=stdIn.readLine())!=null)
        {
            cipher_Text=c.update(test.getBytes("UTF-8"));
            if(cipher_Text!=null)
            {
                mac=m.doFinal(cipher_Text); //mac do texto cifrado
                oos.writeObject(cipher_Text); //cifra
                oos.writeObject(mac); //mac da cifra
            }
        }
            while((test=stdIn.readLine())!=null)
            {   oos.writeObject(test);}
    }
}
